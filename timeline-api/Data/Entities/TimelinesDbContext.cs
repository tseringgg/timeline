// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Data.Entities.Configurations;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
#nullable disable

namespace Data.Entities;

public partial class TimelinesDbContext : DbContext, ITimelinesDbContext
{
    public TimelinesDbContext()
    {
    }

    public TimelinesDbContext(DbContextOptions<TimelinesDbContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Country> Country { get; set; }

    public virtual DbSet<Event> Event { get; set; }

    public virtual DbSet<Event_Tag> Event_Tag { get; set; }

    public virtual DbSet<Image> Image { get; set; }

    public virtual DbSet<Reference> Reference { get; set; }

    public virtual DbSet<Tag> Tag { get; set; }

    public virtual DbSet<Timeline> Timeline { get; set; }

    public virtual DbSet<User> User { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=.\\sql2019dev;Initial Catalog=timeline;Integrated Security=True;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new Configurations.CountryConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.EventConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.Event_TagConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ImageConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ReferenceConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TagConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.TimelineConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UserConfiguration());

        OnModelCreatingGeneratedProcedures(modelBuilder);
        OnModelCreatingGeneratedFunctions(modelBuilder);
        OnModelCreatingPartial(modelBuilder);

        /** Seed database tables */
        SeedTimelineTable(modelBuilder);
        SeedCountryTable(modelBuilder);
        SeedUserTable(modelBuilder);
    }

    private static void SeedUserTable(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<User>().HasData(
         new User { UserId = 1, FirstName = "Dhawa", LastName = "Ngoche", Middle_Name = "Dhondup", Email = "dhawa.ngoche@hotmail.com", UserPrincipalName = "kkssadmin@11lypf.onmicrosoft.com", IsDeleted = false }
         );
    }

    private static void SeedCountryTable(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Country>().HasData(
         new Country { CountryId = 1, Name = "Tibet" },
         new Country { CountryId = 2, Name = "China" },
         new Country { CountryId = 3, Name = "India" },
         new Country { CountryId = 4, Name = "Nepal" },
         new Country { CountryId = 5, Name = "Bhutan" },
         new Country { CountryId = 6, Name = "Pakistan" },
         new Country { CountryId = 7, Name = "Mongolia" },
         new Country { CountryId = 8, Name = "Israel" },
         new Country { CountryId = 9, Name = "Sri Lanka" },
         new Country { CountryId = 10, Name = "Egypt" },
         new Country { CountryId = 10, Name = "Rome" },
         new Country { CountryId = 10, Name = "Turkey" },
         new Country { CountryId = 10, Name = "Greek" }
        );
    }

    private static void SeedTimelineTable(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Timeline>().HasData(
             new Timeline { TimelineId = 1, CenturyId = 1, Era = "BC" },
             new Timeline { TimelineId = 2, CenturyId = 200, Era = "BC" },
             new Timeline { TimelineId = 3, CenturyId = 300, Era = "BC" },
             new Timeline { TimelineId = 4, CenturyId = 400, Era = "BC" },
             new Timeline { TimelineId = 5, CenturyId = 500, Era = "BC" },
             new Timeline { TimelineId = 6, CenturyId = 600, Era = "BC" },
             new Timeline { TimelineId = 7, CenturyId = 700, Era = "BC" },
             new Timeline { TimelineId = 8, CenturyId = 800, Era = "BC" },
             new Timeline { TimelineId = 9, CenturyId = 900, Era = "BC" },
             new Timeline { TimelineId = 10, CenturyId = 1000, Era = "BC" },
             new Timeline { TimelineId = 11, CenturyId = 1100, Era = "BC" },
             new Timeline { TimelineId = 12, CenturyId = 1200, Era = "BC" },
             new Timeline { TimelineId = 13, CenturyId = 1300, Era = "BC" },
             new Timeline { TimelineId = 14, CenturyId = 1400, Era = "BC" },
             new Timeline { TimelineId = 15, CenturyId = 1500, Era = "BC" },
             new Timeline { TimelineId = 16, CenturyId = 1600, Era = "BC" },
             new Timeline { TimelineId = 17, CenturyId = 1700, Era = "BC" },
             new Timeline { TimelineId = 18, CenturyId = 1800, Era = "BC" },
             new Timeline { TimelineId = 19, CenturyId = 1900, Era = "BC" },
             new Timeline { TimelineId = 20, CenturyId = 2000, Era = "BC" },
             new Timeline { TimelineId = 21, CenturyId = 100, Era = "BC" },
             new Timeline { TimelineId = 22, CenturyId = 2100, Era = "BC" },
             new Timeline { TimelineId = 23, CenturyId = 2200, Era = "BC" },
             new Timeline { TimelineId = 24, CenturyId = 2300, Era = "BC" },
             new Timeline { TimelineId = 25, CenturyId = 2400, Era = "BC" },
             new Timeline { TimelineId = 26, CenturyId = 2500, Era = "BC" },
             new Timeline { TimelineId = 27, CenturyId = 2600, Era = "BC" },
             new Timeline { TimelineId = 28, CenturyId = 2700, Era = "BC" },
             new Timeline { TimelineId = 29, CenturyId = 2800, Era = "BC" },
             new Timeline { TimelineId = 30, CenturyId = 2900, Era = "BC" },
             new Timeline { TimelineId = 31, CenturyId = 3000, Era = "BC" },
             new Timeline { TimelineId = 32, CenturyId = 3100, Era = "BC" },
             new Timeline { TimelineId = 33, CenturyId = 3200, Era = "BC" },
             new Timeline { TimelineId = 34, CenturyId = 3300, Era = "BC" },
             new Timeline { TimelineId = 35, CenturyId = 3400, Era = "BC" },
             new Timeline { TimelineId = 36, CenturyId = 3500, Era = "BC" },

             new Timeline { TimelineId = 37, CenturyId = 1, Era = "AD" },
             new Timeline { TimelineId = 38, CenturyId = 100, Era = "AD" },
             new Timeline { TimelineId = 39, CenturyId = 200, Era = "AD" },
             new Timeline { TimelineId = 40, CenturyId = 300, Era = "AD" },
             new Timeline { TimelineId = 41, CenturyId = 400, Era = "AD" },
             new Timeline { TimelineId = 42, CenturyId = 500, Era = "AD" },
             new Timeline { TimelineId = 43, CenturyId = 600, Era = "AD" },
             new Timeline { TimelineId = 44, CenturyId = 700, Era = "AD" },
             new Timeline { TimelineId = 45, CenturyId = 800, Era = "AD" },
             new Timeline { TimelineId = 46, CenturyId = 900, Era = "AD" },
             new Timeline { TimelineId = 47, CenturyId = 1000, Era = "AD" },
             new Timeline { TimelineId = 48, CenturyId = 1100, Era = "AD" },
             new Timeline { TimelineId = 49, CenturyId = 1200, Era = "AD" },
             new Timeline { TimelineId = 50, CenturyId = 1300, Era = "AD" },
             new Timeline { TimelineId = 51, CenturyId = 1400, Era = "AD" },
             new Timeline { TimelineId = 52, CenturyId = 1500, Era = "AD" },
             new Timeline { TimelineId = 53, CenturyId = 1600, Era = "AD" },
             new Timeline { TimelineId = 54, CenturyId = 1700, Era = "AD" },
             new Timeline { TimelineId = 55, CenturyId = 1800, Era = "AD" },
             new Timeline { TimelineId = 56, CenturyId = 1900, Era = "AD" },
             new Timeline { TimelineId = 57, CenturyId = 2000, Era = "AD" },
             new Timeline { TimelineId = 58, CenturyId = 2100, Era = "AD" }
         );
    }

    public async override Task<int> SaveChangesAsync(CancellationToken cancellationToken)
    {
        return await base.SaveChangesAsync(cancellationToken);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
